"use client";
import React, { useState, useEffect } from "react";

const FormSection = ({currSection}) => {
  const[theCurrSection, setTheCurrSection] = useState(currSection)
  const [formData, setFormData] = useState({
    indexNo: "",
    entryMode: "",
    entryLevel: "",
    currentLevel: "",
    program: "",
    dateOfAdmission: "",
    dateOfCompletion: "",
    hall: "",
    hallName: "",
    hallType: "",
    prefix: "",
    firstName: "",
    middleName: "",
    lastName: "",
    gender: "",
    dateOfBirth: "",
    placeOfBirth: "",
    nationality: "",
    hometown: "",
    cityOfBirth: "",
    mobileNumber: "",
    institutionalEmail: "",
    addressLine: "",
    addressLine2: "",
    maritalStatus: "",
    religion: ""
  });

  const handleChange = (e) => {
    setFormData((prev) => ({
      ...prev,
      [e.target.name]: e.target.value,
    }));
  };

  const RenderSection = () => {
    switch (theCurrSection) {
      case 1:
        return (
          <div>
            <div className="lg:grid lg:grid-cols-2 lg:gap-4 lg:px-32 lg:py-10 px-10 grid-cols-1 mt-10">
              <div>
                <label htmlFor="indexNo" className="block text-sm text-gray-600 mb-1">
                  Index No
                </label>
                <input
                  type="text"
                  id="indexNo"
                  name="indexNo"
                  value={formData.indexNo}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="entryMode" className="block text-sm text-gray-600 mb-1">
                  Entry Mode
                </label>
                <select
                  id="entryMode"
                  name="entryMode"
                  value={formData.entryMode}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Entry Mode</option>
                  <option value="direct">Direct Entry</option>
                  <option value="matured">Matured Entry</option>
                </select>
              </div>
              <div>
                <label htmlFor="entryLevel" className="block text-sm text-gray-600 mb-1">
                  Entry Level
                </label>
                <select
                  id="entryLevel"
                  name="entryLevel"
                  value={formData.entryLevel}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Entry Level</option>
                  <option value="100">100</option>
                  <option value="200">200</option>
                  <option value="300">300</option>
                  <option value="400">400</option>
                </select>
              </div>
              <div>
                <label htmlFor="currentLevel" className="block text-sm text-gray-600 mb-1">
                  Current Level
                </label>
                <select
                  id="currentLevel"
                  name="currentLevel"
                  value={formData.currentLevel}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Current Level</option>
                  <option value="100">100</option>
                  <option value="200">200</option>
                  <option value="300">300</option>
                  <option value="400">400</option>
                </select>
              </div>
              <div>
                <label htmlFor="program" className="block text-sm text-gray-600 mb-1">
                  Program
                </label>
                <select
                  id="program"
                  name="program"
                  value={formData.program}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Program</option>
                  <option value="btech">B-TECH Biomedical Engineering</option>
                  <option value="hnd">HND Biomedical Engineering</option>
                </select>
              </div>
              <div>
                <label htmlFor="dateOfAdmission" className="block text-sm text-gray-600 mb-1">
                  Date of Admission
                </label>
                <input
                  type="date"
                  id="dateOfAdmission"
                  name="dateOfAdmission"
                  value={formData.dateOfAdmission}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="dateOfCompletion" className="block text-sm text-gray-600 mb-1">
                  Date of Completion
                </label>
                <input
                  type="date"
                  id="dateOfCompletion"
                  name="dateOfCompletion"
                  value={formData.dateOfCompletion}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="hall" className="block text-sm text-gray-600 mb-1">
                  Hall
                </label>
                <input
                  type="text"
                  id="hall"
                  name="hall"
                  value={formData.hall}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="hallName" className="block text-sm text-gray-600 mb-1">
                  Hall Name
                </label>
                <input
                  type="text"
                  id="hallName"
                  name="hallName"
                  value={formData.hallName}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="hallType" className="block text-sm text-gray-600 mb-1">
                  Hall Type
                </label>
                <input
                  type="text"
                  id="hallType"
                  name="hallType"
                  value={formData.hallType}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
            </div>
          </div>
        );
      case 2:
        return (
          <div>
            <div className="lg:grid lg:grid-cols-2 gap-4 lg:px-32 lg:py-10 px-10 grid grid-col-1 mt-10">
              <div>
                <label htmlFor="prefix" className="block text-sm text-gray-600 mb-1">
                  Prefix
                </label>
                <select
                  id="prefix"
                  name="prefix"
                  value={formData.prefix}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Prefix</option>
                  <option value="mr">Mr</option>
                  <option value="ms">Ms</option>
                  <option value="mrs">Mrs</option>
                </select>
              </div>
              <div>
                <label htmlFor="firstName" className="block text-sm text-gray-600 mb-1">
                  First Name
                </label>
                <input
                  type="text"
                  id="firstName"
                  name="firstName"
                  value={formData.firstName}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="middleName" className="block text-sm text-gray-600 mb-1">
                  Middle Name
                </label>
                <input
                  type="text"
                  id="middleName"
                  name="middleName"
                  value={formData.middleName}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div>
                <label htmlFor="lastName" className="block text-sm text-gray-600 mb-1">
                  Last Name
                </label>
                <input
                  type="text"
                  id="lastName"
                  name="lastName"
                  value={formData.lastName}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="gender" className="block text-sm text-gray-600 mb-1">
                  Gender
                </label>
                <select
                  id="gender"
                  name="gender"
                  value={formData.gender}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Gender</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
                </select>
              </div>
              <div>
                <label htmlFor="dateOfBirth" className="block text-sm text-gray-600 mb-1">
                  Date of Birth
                </label>
                <input
                  type="date"
                  id="dateOfBirth"
                  name="dateOfBirth"
                  value={formData.dateOfBirth}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="placeOfBirth" className="block text-sm text-gray-600 mb-1">
                  Place of Birth
                </label>
                <input
                  type="text"
                  id="placeOfBirth"
                  name="placeOfBirth"
                  value={formData.placeOfBirth}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="nationality" className="block text-sm text-gray-600 mb-1">
                  Nationality
                </label>
                <input
                  type="text"
                  id="nationality"
                  name="nationality"
                  value={formData.nationality}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="hometown" className="block text-sm text-gray-600 mb-1">
                  Hometown
                </label>
                <input
                  type="text"
                  id="hometown"
                  name="hometown"
                  value={formData.hometown}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="cityOfBirth" className="block text-sm text-gray-600 mb-1">
                  City of Birth
                </label>
                <input
                  type="text"
                  id="cityOfBirth"
                  name="cityOfBirth"
                  value={formData.cityOfBirth}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="mobileNumber" className="block text-sm text-gray-600 mb-1">
                  Mobile Number
                </label>
                <input
                  type="tel"
                  id="mobileNumber"
                  name="mobileNumber"
                  value={formData.mobileNumber}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="institutionalEmail" className="block text-sm text-gray-600 mb-1">
                  Institutional Email
                </label>
                <input
                  type="email"
                  id="institutionalEmail"
                  name="institutionalEmail"
                  value={formData.institutionalEmail}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="addressLine" className="block text-sm text-gray-600 mb-1">
                  Address Line 1
                </label>
                <input
                  type="text"
                  id="addressLine"
                  name="addressLine"
                  value={formData.addressLine}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div>
                <label htmlFor="addressLine2" className="block text-sm text-gray-600 mb-1">
                  Address Line 2
                </label>
                <input
                  type="text"
                  id="addressLine2"
                  name="addressLine2"
                  value={formData.addressLine2}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div>
                <label htmlFor="maritalStatus" className="block text-sm text-gray-600 mb-1">
                  Marital Status
                </label>
                <select
                  id="maritalStatus"
                  name="maritalStatus"
                  value={formData.maritalStatus}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Marital Status</option>
                  <option value="single">Single</option>
                  <option value="married">Married</option>
                  <option value="divorced">Divorced</option>
                  <option value="widowed">Widowed</option>
                </select>
              </div>
              <div>
                <label htmlFor="religion" className="block text-sm text-gray-600 mb-1">
                  Religion
                </label>
                <select
                  id="religion"
                  name="religion"
                  value={formData.religion}
                  onChange={handleChange}
                  className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">Select Religion</option>
                  <option value="christianity">Christianity</option>
                  <option value="islamic">Islamic</option>
                  <option value="traditional">Traditional</option>
                </select>
              </div>
            </div>
          </div>
        );
      default:
        return null;
    }
  };

  return (
    <div>
      <RenderSection />
      <div className="flex flex-row space-x-7 mt-10 lg:px-60 lg:py-5 px-20 justify-center">
        <button
          onClick={() => {
            currSection !== 1 ? setTheCurrSection(currSection - 1) : setTheCurrSection(1);
          }}
          className="w-[20em] bg-[#3b5bfd] text-white py-3 px-4 rounded-md hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
        >
          Previous
        </button>
        <button
          onClick={() => {
            currSection !== 2 ? setTheCurrSection(currSection + 1) : setTheCurrSection(2);
          }}
          className="w-[20em] bg-[#3b5bfd] text-white py-3 px-4 rounded-md hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
        >
          Next
        </button>
      </div>
    </div>
  );
};

export default function SignupForm() {
  const [currSection, setCurrSection] = useState(1);

  return (
    <div className="min-h-screen w-screen">
      {/* Step indicator */}
      <div className="flex justify-center pt-6 pb-6 border-b border-gray-200 bg-gradient-to-r from-blue-900 to-blue-600">
        <div className="flex items-center justify-center gap-16 max-w-xl w-full">
          <div className="flex flex-col items-center">
            <div
              className="w-8 h-8 rounded-full flex items-center justify-center font-medium mb-1 border"
              style={{ backgroundColor: currSection === 1 ? '#3b5bfd' : 'white', color: currSection === 1 ? 'white' : 'gray' }}
            >
              1
            </div>
            <span className="text-sm flex flex-col font-semibold text-white">Academic Information</span>
          </div>
          <div className="flex flex-col items-center">
            <div
              className="w-8 h-8 rounded-full flex items-center justify-center font-medium mb-1 border"
              style={{ backgroundColor: currSection === 2 ? '#3b5bfd' : 'white', color: currSection === 2 ? 'white' : 'gray' }}
            >
              2
            </div>
            <span className="text-sm flex flex-col font-semibold text-white">Personal Information</span>
          </div>
        </div>
      </div>
      <div>
        <div className="flex flex-col">
          <FormSection currSection={currSection}/>
        </div>
      </div>
    </div>
  );
}